package gestioneAcquisti;

import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Collection;
import java.util.LinkedList;

import javax.sql.DataSource;

import GestioneCarrello.composto;
import utils.utility;

public class OrdineModel implements OrdineModelDS<ordine> {
//private DataSource ds= null;
private Connection db;
public int autoGeneratedID;
public boolean junit=true;
	
	public  OrdineModel(Connection db) {
		this.db=db;
	}
	
	@Override
	public Collection<ordine> doRetrieveByCodice_fiscale(String order) throws SQLException {
		Connection connection=null;
		PreparedStatement prepareStatement=null;
		
		String selectSQL="SELECT * FROM ordine where codice_fiscale= ?";
		
		
		Collection <ordine> ordine= new LinkedList<ordine>(); 
		try {
			
			connection= db;
			prepareStatement= db.prepareStatement(selectSQL);
			prepareStatement.setString(1, order);
			ResultSet rs=prepareStatement.executeQuery();
		
			
			while(rs.next()) {
				ordine bean=new ordine();
				bean.setautoGeneratedID(rs.getInt("numero"));
				bean.setCodice_fiscale(rs.getString("codice_fiscale"));
				ordine.add(bean);			
			}
						
		}catch(SQLException e){
			e.printStackTrace();
			
		}
		
		return ordine;
	}
	

	public boolean getJunit() {
		return junit;
	}

	public void setJunit(boolean junit) {
		this.junit = junit;
	}

	@Override
	public int doSave(ordine item) throws SQLException {
		ordine ordine2=new ordine();
		// TODO Auto-generated method stub
		Connection connection = null;
		PreparedStatement preparedStatement = null;
		
		String insertSQL="INSERT INTO ordine "+" (codice_fiscale,totale,stato) VALUES (?,?,?)";    
		
		try {
			connection=db;
			connection.setAutoCommit(false);
			preparedStatement = connection.prepareStatement(insertSQL, Statement.RETURN_GENERATED_KEYS);
		
			

			//preparedStatement.setInt(1,item.getNumero());
			preparedStatement.setString(1,item.getCodice_fiscale());
			preparedStatement.setDouble(2,item.getTotale());
			preparedStatement.setString(3,item.getStato());
			
			
			
			
			
			utility.print("doSave: " + preparedStatement.toString());
			preparedStatement.executeUpdate();
			ResultSet tableKeys = preparedStatement.getGeneratedKeys();
			tableKeys.next();
				 autoGeneratedID = tableKeys.getInt(1);
				System.out.println(autoGeneratedID);
				
				

			connection.commit();

		} 
		catch(SQLException e) {
			e.printStackTrace();
		}
		
		
		
		
		/*finally {
			try {
				if (preparedStatement != null)
					preparedStatement.close();
			} finally {
				if (connection != null) {
					connection.close();
				}
			}
		}*/
		
		return autoGeneratedID;
	
	}

	
	public Collection<ordine>doRetrieveByAll() throws SQLException {
		Connection connection=null;
		PreparedStatement prepareStatement=null;
		
		String selectSQL="SELECT * FROM ordine";
		
		
		Collection <ordine> ordine= new LinkedList<ordine>(); 
		
		
		try {
			
			connection= db;
			prepareStatement= connection.prepareStatement(selectSQL);
			
			ResultSet rs=prepareStatement.executeQuery();
			
			while(rs.next()) {
				ordine bean= new ordine();
				
				bean.setautoGeneratedID(rs.getInt("numero"));
				bean.setCodice_fiscale(rs.getString("codice_fiscale"));
				ordine.add(bean);
				}
						
		}finally {
			try {
			if(prepareStatement!=null)
			prepareStatement.close();
			}finally {
				
			
			
			if(connection!=null)
			connection.close();
			}
			
		}
		
		return ordine;
	}
		
	
	
	
	@Override
	public void doUpdate(ordine item) throws SQLException {
		// TODO Auto-generated method stub
		// TODO Auto-generated method stub
		Connection connection = null;
		PreparedStatement preparedStatement = null;
		
		String updateSQL="UPDATE ordine SET stato=? "+ "where numero=? " ;    
		
		try {
			connection=db;
			connection.setAutoCommit(false);
			preparedStatement = connection.prepareStatement(updateSQL);
		
			

			//preparedStatement.setInt(1,item.getNumero());
			preparedStatement.setString(1, "Pagato");
			preparedStatement.setInt(2,item.getautoGeneratedID());
			
			
			
			
			
			
			utility.print("doUpdate: " + preparedStatement.toString());
			preparedStatement.executeUpdate();
			
				
				

			connection.commit();

		} 
		catch(SQLException e) {
			e.printStackTrace();
		}
		
		
		
		
	
	}

	@Override
	public boolean doDelete(int num) throws SQLException {
		Connection connection=null;
		PreparedStatement prepareStatement=null;
		
		String selectSQL="DELETE * FROM ordine where numero= ?";
		
		
		Collection <ordine> ordine= new LinkedList<ordine>(); 
		try {
			
			connection= db;
			prepareStatement= db.prepareStatement(selectSQL);
			prepareStatement.setInt(1, num);
			ResultSet rs=prepareStatement.executeQuery();
		
			
			while(rs.next()) {
			//	ordine bean=new ordine();
			/*	bean.setautoGeneratedID(rs.getInt("numero"));
				bean.setCodice_fiscale(rs.getString("codice_fiscale"));
				ordine.add(bean);		*/	
			}
						
		}catch(SQLException e){
			e.printStackTrace();
			return false;
			
		}
		
		return true;
		
	}






}
